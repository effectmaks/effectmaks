import logging
from typing import Dict

from base.models.cash import ModelCash, CashItem
from telegram_bot.api.telegramApi import ConnectTelebot


class ExceptionScriptCashView(Exception):
    def __init__(self, err_message: str = ''):
        logging.error(f'–ö–ª–∞—Å—Å {ExceptionScriptCashView.__name__} - {err_message}')
        super().__init__(err_message)


class ScriptCashView:
    """
    –û–ø–µ—Ä–∞—Ü–∏–∏ –≤–≤–æ–¥–∞, –≤—ã–≤–æ–¥–∞ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤
    """
    def __init__(self, connect_telebot: ConnectTelebot):
        logging.info('–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ ScriptCashView')
        self._connect_telebot = connect_telebot

    def work(self):
        """
        –†–∞–±–æ—Ç–∞ –∫–ª–∞—Å—Å–∞
        """
        logging.info('–ö–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—á–µ—Ç–∞')
        try:
            cash_dict: Dict[int, CashItem] = ModelCash.get_cash_user(self._connect_telebot.id_user)
            if not cash_dict:
                self._connect_telebot.send_text('–£ –≤–∞—Å –Ω–µ—Ç —Å—á–µ—Ç–æ–≤.')
                return
            str_out: str = ''
            prev_safe: str = ''
            for id_cash, cash in cash_dict.items():
                if prev_safe != cash.safe_name:
                    if prev_safe != '':
                        self._connect_telebot.send_text(str_out)
                    prev_safe = cash.safe_name
                    str_out = f'üí∞{cash.safe_name} "{cash.safe_type}"\n'
                str_out = f'{str_out}üî∫{cash.coin}: {cash.amount}\n'
            self._connect_telebot.send_text(str_out)
            logging.info('–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞')
        except Exception as err:
            raise ExceptionScriptCashView(f'–û—à–∏–±–∫–∞ –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—á–µ—Ç–∞ - {str(err)}')


